version: "3.0"
services:
  mailer_services:
    image: mailer_services
    container_name: mailer_services
    restart: always
    networks:
      - main
    build:
      context: ./services/
      dockerfile: ./Dockerfile
    command: bash -c "cd src && python sendMailOfTasks.py"
    volumes:
      - ./services:/opt/app
    environment:
      KAFKAURL: kafka:29092
      APIURL: api:3000
  api:
    container_name: mailer_api
    restart: always
    networks:
      - main
    depends_on:
      - mongo
      - kafka
    build:
      context: .
      dockerfile: ./api/Dockerfile
    command: bash -c "npm install && nodemon ."
    volumes:
      - ./api:/usr/src/app
    ports:
      - "81:3000"
    links:
      - mongo
      - kafka
    environment:
      KAFKA_URL: kafka:29092
  mongo:
    container_name: mailer_mongo
    image: mongo:latest
    networks:
      - main
    image: mongo:latest
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./data/db:/data/db
  # dkron:
  #   container_name: dkron
  #   image: dkron/dkron:latest
  #   command: agent --server
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./data/dkron.db:/dkron.db
  zookeeper:
    container_name: mailer_zookeeper
    restart: always
    image: confluentinc/cp-zookeeper:latest
    networks:
      - main
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: mailer_kafka
    restart: always
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    # command: kafka-topics --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 60 --topic tasks

    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    # An important note about accessing Kafka from clients on other machines:
    # -----------------------------------------------------------------------
    #
    # The config used here exposes port 9092 for _external_ connections to the broker
    # i.e. those from _outside_ the docker network. This could be from the host machine
    # running docker, or maybe further afield if you've got a more complicated setup.
    # If the latter is true, you will need to change the value 'localhost' in
    # KAFKA_ADVERTISED_LISTENERS to one that is resolvable to the docker host from those
    # remote clients
    #
    # For connections _internal_ to the docker network, such as from other services
    # and components, use kafka:29092.
    #
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
    # "`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-'"`-._,-
    #
    image: confluentinc/cp-kafka:latest
    networks:
      - main
    depends_on:
      - zookeeper
    # ports:
    #   - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
networks:
    main:
        external: true  
